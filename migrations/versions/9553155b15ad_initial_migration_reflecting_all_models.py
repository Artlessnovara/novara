"""Initial migration reflecting all models

Revision ID: 9553155b15ad
Revises:
Create Date: 2025-09-17 09:02:23.635499

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9553155b15ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('platform_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('can_send_messages', sa.Boolean(), nullable=False),
    sa.Column('can_make_calls', sa.Boolean(), nullable=False),
    sa.Column('profile_pic', sa.String(length=150), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('theme', sa.String(length=10), nullable=True),
    sa.Column('chat_wallpaper', sa.String(length=255), nullable=True),
    sa.Column('message_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('group_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('privacy_last_seen', sa.String(length=50), nullable=False),
    sa.Column('privacy_profile_pic', sa.String(length=50), nullable=False),
    sa.Column('privacy_about', sa.String(length=50), nullable=False),
    sa.Column('is_premium', sa.Boolean(), nullable=False),
    sa.Column('premium_expires_at', sa.DateTime(), nullable=True),
    sa.Column('profile_banner_url', sa.String(length=255), nullable=True),
    sa.Column('profile_theme', sa.String(length=50), nullable=True),
    sa.Column('bio_links', sa.JSON(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('admin_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blocked_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blocker_id', sa.Integer(), nullable=False),
    sa.Column('blocked_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blocked_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['blocker_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('blocker_id', 'blocked_id', name='_user_block_uc')
    )
    op.create_table('bookmark',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'target_type', 'target_id', name='_user_target_bookmark_uc')
    )
    with op.batch_alter_table('bookmark', schema=None) as batch_op:
        batch_op.create_index('ix_bookmark_target', ['target_type', 'target_id'], unique=False)

    op.create_table('challenge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('community',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover_image', sa.String(length=150), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('price_naira', sa.Integer(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('cover_image', sa.String(length=150), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('account_number', sa.String(length=20), nullable=True),
    sa.Column('account_name', sa.String(length=100), nullable=True),
    sa.Column('extra_instructions', sa.Text(), nullable=True),
    sa.Column('final_exam_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('creative_work',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('media_url', sa.String(length=255), nullable=True),
    sa.Column('work_type', sa.String(length=50), nullable=False),
    sa.Column('sub_category', sa.String(length=50), nullable=True),
    sa.Column('genre', sa.String(length=50), nullable=True),
    sa.Column('style_options', sa.JSON(), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('cover_image_url', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('creative_work', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_creative_work_timestamp'), ['timestamp'], unique=False)

    op.create_table('draft',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('draft_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fcm_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('feedback_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('follow',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('generic_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('generic_comment', schema=None) as batch_op:
        batch_op.create_index('ix_comment_target', ['target_type', 'target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_generic_comment_timestamp'), ['timestamp'], unique=False)

    op.create_table('group_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover_image', sa.String(length=150), nullable=True),
    sa.Column('room_type', sa.String(length=50), nullable=False),
    sa.Column('requested_by_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['requested_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('library_material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('price_naira', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['uploader_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('reaction_type', sa.String(length=20), server_default='like', nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.create_index('ix_like_target', ['target_type', 'target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_like_timestamp'), ['timestamp'], unique=False)

    op.create_table('muted_status_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('muter_id', sa.Integer(), nullable=False),
    sa.Column('muted_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['muted_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['muter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('muter_id', 'muted_id', name='_muter_muted_uc')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('object_type', sa.String(length=50), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_user_id'), ['user_id'], unique=False)

    op.create_table('premium_subscription_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proof_of_payment_path', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_timestamp'), ['timestamp'], unique=False)

    op.create_table('reel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('video_url', sa.String(length=255), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reel', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reel_timestamp'), ['timestamp'], unique=False)

    op.create_table('referral',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.String(length=255), nullable=False),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('background', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_story', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('status', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_status_expires_at'), ['expires_at'], unique=False)

    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('support_ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_page',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('profile_pic_url', sa.String(length=255), nullable=True),
    sa.Column('cover_banner_url', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('action_button_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('banned_from_community',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('banned_by_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['banned_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('community_id', 'user_id', name='_community_user_ban_uc')
    )
    op.create_table('certificate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('certificate_uid', sa.String(length=100), nullable=False),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('certificate_uid')
    )
    op.create_table('certificate_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('requested_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('challenge_submissions',
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('creative_work_id', sa.Integer(), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenge.id'], ),
    sa.ForeignKeyConstraint(['creative_work_id'], ['creative_work.id'], ),
    sa.PrimaryKeyConstraint('challenge_id', 'creative_work_id')
    )
    op.create_table('chat_room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('room_type', sa.String(length=50), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('speech_enabled', sa.Boolean(), nullable=False),
    sa.Column('last_message_timestamp', sa.DateTime(), nullable=True),
    sa.Column('cover_image', sa.String(length=150), nullable=True),
    sa.Column('join_token', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id')
    )
    with op.batch_alter_table('chat_room', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_room_join_token'), ['join_token'], unique=True)
        batch_op.create_index(batch_op.f('ix_chat_room_last_message_timestamp'), ['last_message_timestamp'], unique=False)

    op.create_table('community_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('member_count', sa.Integer(), nullable=True),
    sa.Column('daily_posts', sa.Integer(), nullable=True),
    sa.Column('daily_comments', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('community_id', 'date', name='_community_date_uc')
    )
    with op.batch_alter_table('community_analytics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_community_analytics_community_id'), ['community_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_community_analytics_date'), ['date'], unique=False)

    op.create_table('community_membership',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'community_id')
    )
    op.create_table('course_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('course_comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_comment_timestamp'), ['timestamp'], unique=False)

    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('proof_of_payment_path', sa.String(length=255), nullable=True),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_exam',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('time_limit_minutes', sa.Integer(), nullable=True),
    sa.Column('pass_mark', sa.Integer(), nullable=False),
    sa.Column('calculator_allowed', sa.Boolean(), nullable=True),
    sa.Column('retake_allowed', sa.Boolean(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('allowed_attempts', sa.Integer(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('shuffle_questions', sa.Boolean(), nullable=True),
    sa.Column('allow_navigation', sa.Boolean(), nullable=True),
    sa.Column('disable_backtracking', sa.Boolean(), nullable=True),
    sa.Column('full_screen_enforced', sa.Boolean(), nullable=True),
    sa.Column('tab_switch_detection', sa.Boolean(), nullable=True),
    sa.Column('disable_copy_paste', sa.Boolean(), nullable=True),
    sa.Column('webcam_monitoring', sa.Boolean(), nullable=True),
    sa.Column('release_scores_immediately', sa.Boolean(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('library_purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('proof_of_payment_path', sa.String(length=255), nullable=True),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['material_id'], ['library_material.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_preview',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=2048), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status_id')
    )
    op.create_table('module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('muted_in_community',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('muted_by_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['muted_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('community_id', 'user_id', name='_community_user_mute_uc')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('media_type', sa.String(length=20), nullable=True),
    sa.Column('media_url', sa.String(length=255), nullable=True),
    sa.Column('original_post_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('privacy', sa.String(length=50), nullable=False),
    sa.Column('post_status', sa.String(length=50), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('is_boosted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], ),
    sa.ForeignKeyConstraint(['original_post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['user_page.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)

    op.create_table('status_view',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status_id', 'user_id', name='_status_user_view_uc')
    )
    op.create_table('vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenge.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['creative_work.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'challenge_id', 'submission_id', name='_user_challenge_submission_vote_uc')
    )
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('submission_type', sa.String(length=50), nullable=False),
    sa.Column('max_file_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('call_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('caller_id', sa.Integer(), nullable=False),
    sa.Column('callee_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('call_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('answered_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['callee_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['caller_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('call_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_call_history_is_active'), ['is_active'], unique=False)

    op.create_table('chat_clear_timestamp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('cleared_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'room_id', name='_user_room_clear_uc')
    )
    op.create_table('chat_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.Column('replied_to_id', sa.Integer(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('is_forwarded', sa.Boolean(), nullable=True),
    sa.Column('forwarded_from_id', sa.Integer(), nullable=True),
    sa.Column('replied_to_status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['forwarded_from_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['replied_to_id'], ['chat_message.id'], ),
    sa.ForeignKeyConstraint(['replied_to_status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_message', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_message_timestamp'), ['timestamp'], unique=False)

    op.create_table('chat_room_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_room_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_in_room', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['chat_room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chat_room_id', 'user_id', name='_room_user_uc')
    )
    op.create_table('exam_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('final_exam_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('appeal_text', sa.Text(), nullable=True),
    sa.Column('appeal_status', sa.String(length=50), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['final_exam_id'], ['final_exam.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('video_url', sa.String(length=255), nullable=True),
    sa.Column('drive_link', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('muted_room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'room_id', name='_user_muted_room_uc')
    )
    op.create_table('muted_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('muted_by_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['muted_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'room_id', name='_user_room_uc')
    )
    op.create_table('pinned_post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('post_impression',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('viewer_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['viewer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post_impression', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_impression_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_impression_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_impression_viewer_id'), ['viewer_id'], unique=False)

    op.create_table('quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('time_limit_minutes', sa.Integer(), nullable=True),
    sa.Column('calculator_allowed', sa.Boolean(), nullable=True),
    sa.Column('randomized_questions', sa.Boolean(), nullable=True),
    sa.Column('attempt_limit', sa.Integer(), nullable=True),
    sa.Column('pass_mark', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reported_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('reported_by_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reported_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reported_post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('reported_by_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['reported_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_last_read',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('last_read_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'room_id', name='_user_room_read_uc')
    )
    op.create_table('assignment_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('text_submission', sa.Text(), nullable=True),
    sa.Column('grade', sa.String(length=10), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_violation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['exam_submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'lesson_id', name='_user_lesson_uc')
    )
    op.create_table('message_reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reaction', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_message.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id', 'user_id', 'reaction', name='_message_user_reaction_uc')
    )
    op.create_table('poll',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_message.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['chat_room.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('marks', sa.Float(), nullable=False),
    sa.Column('negative_marking', sa.Float(), nullable=True),
    sa.Column('shuffle_choices', sa.Boolean(), nullable=True),
    sa.Column('true_false_answer', sa.Boolean(), nullable=True),
    sa.Column('allowed_file_types', sa.String(length=255), nullable=True),
    sa.Column('max_file_size_kb', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['final_exam.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('answers', sa.JSON(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reported_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('reported_by_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_message.id'], ),
    sa.ForeignKeyConstraint(['reported_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('choice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('choice_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poll_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['poll_id'], ['poll.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exam_submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_choice_id', sa.Integer(), nullable=True),
    sa.Column('selected_choices', sa.JSON(), nullable=True),
    sa.Column('text_answer', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('true_false_answer', sa.Boolean(), nullable=True),
    sa.Column('marks_awarded', sa.Float(), nullable=True),
    sa.Column('graded_by_id', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exam_submission_id'], ['exam_submission.id'], ),
    sa.ForeignKeyConstraint(['graded_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['selected_choice_id'], ['choice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poll_vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['option_id'], ['poll_option.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('poll_vote')
    op.drop_table('answer')
    op.drop_table('poll_option')
    op.drop_table('choice')
    op.drop_table('reported_message')
    op.drop_table('quiz_submission')
    op.drop_table('question')
    op.drop_table('poll')
    op.drop_table('message_reaction')
    op.drop_table('lesson_completion')
    op.drop_table('exam_violation')
    op.drop_table('assignment_submission')
    op.drop_table('user_last_read')
    op.drop_table('reported_post')
    op.drop_table('reported_group')
    op.drop_table('quiz')
    with op.batch_alter_table('post_impression', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_impression_viewer_id'))
        batch_op.drop_index(batch_op.f('ix_post_impression_timestamp'))
        batch_op.drop_index(batch_op.f('ix_post_impression_post_id'))

    op.drop_table('post_impression')
    op.drop_table('pinned_post')
    op.drop_table('muted_user')
    op.drop_table('muted_room')
    op.drop_table('lesson')
    op.drop_table('exam_submission')
    op.drop_table('chat_room_member')
    with op.batch_alter_table('chat_message', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_message_timestamp'))

    op.drop_table('chat_message')
    op.drop_table('chat_clear_timestamp')
    with op.batch_alter_table('call_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_call_history_is_active'))

    op.drop_table('call_history')
    op.drop_table('assignment')
    op.drop_table('vote')
    op.drop_table('status_view')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))

    op.drop_table('post')
    op.drop_table('muted_in_community')
    op.drop_table('module')
    op.drop_table('link_preview')
    op.drop_table('library_purchase')
    op.drop_table('final_exam')
    op.drop_table('enrollment')
    with op.batch_alter_table('course_comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_comment_timestamp'))

    op.drop_table('course_comment')
    op.drop_table('community_membership')
    with op.batch_alter_table('community_analytics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_community_analytics_date'))
        batch_op.drop_index(batch_op.f('ix_community_analytics_community_id'))

    op.drop_table('community_analytics')
    with op.batch_alter_table('chat_room', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_room_last_message_timestamp'))
        batch_op.drop_index(batch_op.f('ix_chat_room_join_token'))

    op.drop_table('chat_room')
    op.drop_table('challenge_submissions')
    op.drop_table('certificate_request')
    op.drop_table('certificate')
    op.drop_table('banned_from_community')
    op.drop_table('wallet')
    op.drop_table('user_page')
    op.drop_table('support_ticket')
    op.drop_table('subscription')
    with op.batch_alter_table('status', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_status_expires_at'))

    op.drop_table('status')
    op.drop_table('referral')
    with op.batch_alter_table('reel', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reel_timestamp'))

    op.drop_table('reel')
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_timestamp'))

    op.drop_table('project')
    op.drop_table('premium_subscription_request')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_timestamp'))

    op.drop_table('notification')
    op.drop_table('muted_status_user')
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_like_timestamp'))
        batch_op.drop_index('ix_like_target')

    op.drop_table('like')
    op.drop_table('library_material')
    op.drop_table('group_request')
    with op.batch_alter_table('generic_comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_generic_comment_timestamp'))
        batch_op.drop_index('ix_comment_target')

    op.drop_table('generic_comment')
    op.drop_table('follow')
    op.drop_table('feedback')
    op.drop_table('fcm_token')
    op.drop_table('draft')
    with op.batch_alter_table('creative_work', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_creative_work_timestamp'))

    op.drop_table('creative_work')
    op.drop_table('course')
    op.drop_table('community')
    op.drop_table('challenge')
    with op.batch_alter_table('bookmark', schema=None) as batch_op:
        batch_op.drop_index('ix_bookmark_target')

    op.drop_table('bookmark')
    op.drop_table('blocked_user')
    op.drop_table('admin_log')
    op.drop_table('user')
    op.drop_table('platform_setting')
    op.drop_table('category')
    # ### end Alembic commands ###
